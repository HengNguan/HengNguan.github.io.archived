{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hengngua\\\\OneDrive - Intel Corporation\\\\Desktop\\\\Learn\\\\timer\\\\debate-timer2\\\\src\\\\components\\\\DigitalTimer2\\\\index.js\";\nimport { Component } from \"react\";\nimport './index.css'; // import {useRouter} from \"next/router\";\n// const router = useRouter();\n// const query = router.query;\n// const name = query.name; \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DigitalTimer2 extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isTimerRunning: false,\n      timerLimit: 2.50,\n      currentRunningSeconds: 0,\n      isTimerRunning2: false,\n      timerLimit2: 2.50,\n      currentRunningSeconds2: 0,\n      rightFlag: true,\n      leftFlag: false\n    };\n\n    this.clearTimer = () => {\n      clearInterval(this.intervalId);\n    };\n\n    this.onClickResetTimer = () => {\n      // this.notifyTimerReset('Timer has me reset to default')\n      this.setState({\n        isTimerRunning: false,\n        timerLimit: 2.50,\n        currentRunningSeconds: 0,\n        isTimerRunning2: false,\n        timerLimit2: 2.50,\n        currentRunningSeconds2: 0\n      });\n      this.clearTimer();\n    };\n\n    this.startTimerCountDown = () => {\n      const {\n        currentRunningSeconds,\n        timerLimit\n      } = this.state;\n      const isTimeCompleted = currentRunningSeconds === timerLimit * 60;\n\n      if (isTimeCompleted) {\n        this.notifyTimerCompleted('Your set time is Completed');\n        this.setState({\n          isTimerRunning: false,\n          currentRunningSeconds: 0\n        });\n        this.clearTimer();\n      } else {\n        this.setState(prevState => ({\n          currentRunningSeconds: prevState.currentRunningSeconds + 1\n        }));\n      }\n    };\n\n    this.startTimerCountDown2 = () => {\n      const {\n        currentRunningSeconds2,\n        timerLimit2\n      } = this.state;\n      const isTimeCompleted2 = currentRunningSeconds2 === timerLimit2 * 60;\n\n      if (isTimeCompleted2) {\n        this.notifyTimerCompleted('Your set time is Completed');\n        this.setState({\n          isTimerRunning2: false,\n          currentRunningSeconds2: 0\n        });\n        this.clearTimer();\n      } else {\n        this.setState(prevState => ({\n          currentRunningSeconds2: prevState.currentRunningSeconds2 + 1\n        }));\n      }\n    };\n\n    this.startStopTimer = () => {\n      const {\n        isTimerRunning,\n        currentRunningSeconds,\n        timerLimit\n      } = this.state;\n      this.setState(prevState => ({\n        isTimerRunning: !prevState.isTimerRunning\n      }));\n      const isTimeCompleted = currentRunningSeconds === timerLimit * 60;\n\n      if (isTimeCompleted) {\n        this.setState({\n          isTimerRunning: false\n        });\n        this.clearTimer();\n      }\n\n      if (isTimerRunning) {\n        this.clearTimer();\n        this.setState({\n          isTimerRunning: false\n        });\n      } else {\n        this.intervalId = setInterval(() => {\n          this.startTimerCountDown();\n        }, 1000);\n      }\n    };\n\n    this.startStopTimer2 = () => {\n      const {\n        isTimerRunning2,\n        currentRunningSeconds2,\n        timerLimit2\n      } = this.state;\n      this.setState(prevState => ({\n        isTimerRunning2: !prevState.isTimerRunning2\n      }));\n      const isTimeCompleted2 = currentRunningSeconds2 === timerLimit2 * 60;\n\n      if (isTimeCompleted2) {\n        this.setState({\n          isTimerRunning2: false\n        });\n        this.clearTimer();\n      }\n\n      if (isTimerRunning2) {\n        this.clearTimer();\n        this.setState({\n          isTimerRunning2: false\n        });\n      } else {\n        this.intervalId = setInterval(() => {\n          this.startTimerCountDown2();\n        }, 1000);\n      }\n    };\n\n    this.onClickSwitchTimer = () => {\n      const {\n        rightFlag,\n        leftFlag\n      } = this.state; // const {isTimerRunning2, currentRunningSeconds2, timerLimit2} = this.state\n      // const {isTimerRunning, currentRunningSeconds, timerLimit} = this.state\n\n      const right = rightFlag;\n      const left = leftFlag;\n\n      if (rightFlag) {\n        this.setState({\n          isTimerRunning: true\n        });\n        this.setState({\n          isTimerRunning2: false\n        });\n        this.startStopTimer2();\n        this.startStopTimer();\n        this.setState({\n          leftFlag: true\n        });\n        this.setState({\n          rightFlag: false\n        });\n        console.log(this.state.rightFlag);\n        console.log(this.state.leftFlag);\n      } else {\n        this.setState({\n          isTimerRunnin2: true\n        });\n        this.setState({\n          isTimerRunnin: false\n        });\n        this.startStopTimer2();\n        this.startStopTimer();\n        this.setState({\n          leftFlag: false\n        });\n        this.setState({\n          rightFlag: true\n        });\n        console.log(this.state.rightFlag);\n        console.log(this.state.leftFlag);\n      }\n    };\n\n    this.renderTimerControlOptions = () => {\n      const {\n        isTimerRunning\n      } = this.state;\n      const playImageUrl = 'https://assets.ccbp.in/frontend/react-js/play-icon-img.png';\n      const stopImageUrl = 'https://assets.ccbp.in/frontend/react-js/pause-icon-img.png';\n      const resetImageUrl = 'https://assets.ccbp.in/frontend/react-js/reset-icon-img.png';\n      const startStopImage = isTimerRunning ? stopImageUrl : playImageUrl;\n      const startStopAltText = isTimerRunning ? 'pause icon' : 'play icon';\n      const startStopText = isTimerRunning ? '停止' : '开始';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-stop-button\",\n          type: \"button\",\n          onClick: this.startStopTimer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"start-stop-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: startStopImage,\n              className: \"start-stop-img\",\n              alt: startStopAltText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"start-stop-text\",\n              children: startStopText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-stop-button\",\n          type: \"button\",\n          onClick: this.onClickSwitchTimer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"start-stop-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: resetImageUrl,\n              className: \"reset-img\",\n              alt: \"reset icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"start-stop-text\",\n              children: \"\\u5207\\u6362\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-stop-button\",\n          type: \"button\",\n          onClick: this.onClickResetTimer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"start-stop-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: resetImageUrl,\n              className: \"reset-img\",\n              alt: \"reset icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"start-stop-text\",\n              children: \"\\u91CD\\u7F6E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this);\n    };\n\n    this.convertTimeToTimerFormat = () => {\n      const {\n        timerLimit,\n        currentRunningSeconds\n      } = this.state;\n      const timeInSeconds = timerLimit * 60 - currentRunningSeconds;\n      const minutes = Math.floor(timeInSeconds / 60);\n      const seconds = Math.floor(timeInSeconds % 60);\n      const minutesInStringFormat = minutes > 9 ? minutes : `0${minutes}`;\n      const secondsInStringFormat = seconds > 9 ? seconds : `0${seconds}`;\n      return `${minutesInStringFormat}:${secondsInStringFormat}`;\n    };\n\n    this.convertTimeToTimerFormat2 = () => {\n      const {\n        timerLimit2,\n        currentRunningSeconds2\n      } = this.state;\n      const timeInSeconds2 = timerLimit2 * 60 - currentRunningSeconds2;\n      const minutes2 = Math.floor(timeInSeconds2 / 60);\n      const seconds2 = Math.floor(timeInSeconds2 % 60);\n      const minutesInStringFormat2 = minutes2 > 9 ? minutes2 : `0${minutes2}`;\n      const secondsInStringFormat2 = seconds2 > 9 ? seconds2 : `0${seconds2}`;\n      return `${minutesInStringFormat2}:${secondsInStringFormat2}`;\n    };\n  }\n\n  componentWillUnmount() {\n    this.clearTimer();\n    this.clearTimer2();\n  }\n\n  render() {\n    const {\n      isTimerRunning\n    } = this.state;\n    const timerStatusText = isTimerRunning ? '计时中' : '暂停中';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"timer-heading\",\n          children: \"\\u53CC\\u65B9\\u5BF9\\u8FA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"time-text\",\n              children: [this.convertTimeToTimerFormat(), \" \\xA0\\xA0\\xA0\", this.convertTimeToTimerFormat2()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"time-status\",\n              children: timerStatusText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-control-container\",\n          children: this.renderTimerControlOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default DigitalTimer2;","map":{"version":3,"names":["Component","DigitalTimer2","state","isTimerRunning","timerLimit","currentRunningSeconds","isTimerRunning2","timerLimit2","currentRunningSeconds2","rightFlag","leftFlag","clearTimer","clearInterval","intervalId","onClickResetTimer","setState","startTimerCountDown","isTimeCompleted","notifyTimerCompleted","prevState","startTimerCountDown2","isTimeCompleted2","startStopTimer","setInterval","startStopTimer2","onClickSwitchTimer","right","left","console","log","isTimerRunnin2","isTimerRunnin","renderTimerControlOptions","playImageUrl","stopImageUrl","resetImageUrl","startStopImage","startStopAltText","startStopText","convertTimeToTimerFormat","timeInSeconds","minutes","Math","floor","seconds","minutesInStringFormat","secondsInStringFormat","convertTimeToTimerFormat2","timeInSeconds2","minutes2","seconds2","minutesInStringFormat2","secondsInStringFormat2","componentWillUnmount","clearTimer2","render","timerStatusText"],"sources":["C:/Users/hengngua/OneDrive - Intel Corporation/Desktop/Learn/timer/debate-timer2/src/components/DigitalTimer2/index.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport './index.css'\r\n// import {useRouter} from \"next/router\";\r\n\r\n// const router = useRouter();\r\n// const query = router.query;\r\n// const name = query.name; \r\n\r\nclass DigitalTimer2 extends Component {\r\n    state = {\r\n      isTimerRunning: false,\r\n      timerLimit: 2.50,\r\n      currentRunningSeconds: 0,\r\n      isTimerRunning2: false,\r\n      timerLimit2: 2.50,\r\n      currentRunningSeconds2: 0,\r\n      rightFlag: true,\r\n      leftFlag: false\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearTimer()\r\n        this.clearTimer2()\r\n    }\r\n    \r\n    clearTimer = () => {\r\n        clearInterval(this.intervalId)\r\n    }\r\n    \r\n    onClickResetTimer = () => {\r\n        // this.notifyTimerReset('Timer has me reset to default')\r\n        this.setState({\r\n          isTimerRunning: false,\r\n          timerLimit: 2.50,\r\n          currentRunningSeconds: 0,\r\n          isTimerRunning2: false,\r\n          timerLimit2: 2.50,\r\n          currentRunningSeconds2: 0,\r\n        })\r\n        this.clearTimer()\r\n    }\r\n\r\n    \r\n\r\n    startTimerCountDown = () => {\r\n      const {currentRunningSeconds, timerLimit} = this.state\r\n      const isTimeCompleted = currentRunningSeconds === timerLimit * 60\r\n      if (isTimeCompleted) {\r\n        this.notifyTimerCompleted('Your set time is Completed')\r\n        this.setState({isTimerRunning: false, currentRunningSeconds: 0})\r\n        this.clearTimer()\r\n      } else {\r\n        this.setState(prevState => ({\r\n          currentRunningSeconds: prevState.currentRunningSeconds + 1,\r\n        }))\r\n      }\r\n    }\r\n\r\n    startTimerCountDown2 = () => {\r\n      const {currentRunningSeconds2, timerLimit2} = this.state\r\n      const isTimeCompleted2 = currentRunningSeconds2 === timerLimit2 * 60\r\n      if (isTimeCompleted2) {\r\n        this.notifyTimerCompleted('Your set time is Completed')\r\n        this.setState({isTimerRunning2: false, currentRunningSeconds2: 0})\r\n        this.clearTimer()\r\n      } else {\r\n        this.setState(prevState => ({\r\n          currentRunningSeconds2: prevState.currentRunningSeconds2 + 1,\r\n        }))\r\n      }\r\n    }\r\n    \r\n    startStopTimer = () => {\r\n        const {isTimerRunning, currentRunningSeconds, timerLimit} = this.state\r\n        this.setState(prevState => ({isTimerRunning: !prevState.isTimerRunning}))\r\n        const isTimeCompleted = currentRunningSeconds === timerLimit * 60\r\n        if (isTimeCompleted) {\r\n          this.setState({isTimerRunning: false})\r\n          this.clearTimer()\r\n        }\r\n        if (isTimerRunning) {\r\n          this.clearTimer()\r\n          this.setState({isTimerRunning: false})\r\n        } else {\r\n          this.intervalId = setInterval(() => {\r\n            this.startTimerCountDown()\r\n          }, 1000)\r\n        }\r\n    }\r\n\r\n    startStopTimer2 = () => {\r\n      const {isTimerRunning2, currentRunningSeconds2, timerLimit2} = this.state\r\n      this.setState(prevState => ({isTimerRunning2: !prevState.isTimerRunning2}))\r\n      const isTimeCompleted2 = currentRunningSeconds2 === timerLimit2 * 60\r\n      if (isTimeCompleted2) {\r\n        this.setState({isTimerRunning2: false})\r\n        this.clearTimer()\r\n      }\r\n      if (isTimerRunning2) {\r\n        this.clearTimer()\r\n        this.setState({isTimerRunning2: false})\r\n      } else {\r\n        this.intervalId = setInterval(() => {\r\n          this.startTimerCountDown2()\r\n        }, 1000)\r\n      }\r\n  }\r\n\r\n    onClickSwitchTimer = () => {\r\n      const {rightFlag, leftFlag} = this.state\r\n      // const {isTimerRunning2, currentRunningSeconds2, timerLimit2} = this.state\r\n      // const {isTimerRunning, currentRunningSeconds, timerLimit} = this.state\r\n\r\n      const right = rightFlag\r\n      const left = leftFlag\r\n      if (rightFlag){\r\n        this.setState({isTimerRunning:true})\r\n        this.setState({isTimerRunning2:false})\r\n        this.startStopTimer2()\r\n        this.startStopTimer()\r\n        this.setState({leftFlag: true})\r\n        this.setState({rightFlag: false})\r\n        console.log(this.state.rightFlag)\r\n        console.log(this.state.leftFlag)\r\n      } else{\r\n        this.setState({isTimerRunnin2:true})\r\n        this.setState({isTimerRunnin:false})\r\n        this.startStopTimer2()\r\n        this.startStopTimer()\r\n        this.setState({leftFlag: false})\r\n        this.setState({rightFlag: true})\r\n        console.log(this.state.rightFlag)\r\n        console.log(this.state.leftFlag)\r\n      }\r\n  }\r\n\r\n\r\n  \r\n\r\n    renderTimerControlOptions = () => {\r\n        const {isTimerRunning} = this.state\r\n        const playImageUrl =\r\n          'https://assets.ccbp.in/frontend/react-js/play-icon-img.png'\r\n        const stopImageUrl =\r\n          'https://assets.ccbp.in/frontend/react-js/pause-icon-img.png'\r\n        const resetImageUrl =\r\n          'https://assets.ccbp.in/frontend/react-js/reset-icon-img.png'\r\n        const startStopImage = isTimerRunning ? stopImageUrl : playImageUrl\r\n        const startStopAltText = isTimerRunning ? 'pause icon' : 'play icon'\r\n        const startStopText = isTimerRunning ? '停止' : '开始'\r\n        return (\r\n          <div className=\"control-options-container\">\r\n            <button\r\n              className=\"start-stop-button\"\r\n              type=\"button\"\r\n              onClick={this.startStopTimer}\r\n            >\r\n              <div className=\"start-stop-container\">\r\n                <img\r\n                  src={startStopImage}\r\n                  className=\"start-stop-img\"\r\n                  alt={startStopAltText}\r\n                />\r\n                <h1 className=\"start-stop-text\">{startStopText}</h1>\r\n              </div>\r\n            </button>\r\n\r\n            <button\r\n              className=\"start-stop-button\"\r\n              type=\"button\"\r\n              onClick={this.onClickSwitchTimer}\r\n            >\r\n              <div className=\"start-stop-container\">\r\n                <img src={resetImageUrl} className=\"reset-img\" alt=\"reset icon\" />\r\n                <h1 className=\"start-stop-text\">切换</h1>\r\n              </div>\r\n            </button>\r\n            \r\n            <button\r\n              className=\"start-stop-button\"\r\n              type=\"button\"\r\n              onClick={this.onClickResetTimer}\r\n            >\r\n              <div className=\"start-stop-container\">\r\n                <img src={resetImageUrl} className=\"reset-img\" alt=\"reset icon\" />\r\n                <h1 className=\"start-stop-text\">重置</h1>\r\n              </div>\r\n            </button>\r\n\r\n            \r\n          </div>\r\n        )\r\n    }\r\n\r\n    convertTimeToTimerFormat = () => {\r\n        const {timerLimit, currentRunningSeconds} = this.state\r\n        const timeInSeconds = timerLimit * 60 - currentRunningSeconds\r\n        const minutes = Math.floor(timeInSeconds / 60)\r\n        const seconds = Math.floor(timeInSeconds % 60)\r\n        const minutesInStringFormat = minutes > 9 ? minutes : `0${minutes}`\r\n        const secondsInStringFormat = seconds > 9 ? seconds : `0${seconds}`\r\n        return `${minutesInStringFormat}:${secondsInStringFormat}`\r\n    }\r\n    convertTimeToTimerFormat2 = () => {\r\n      const {timerLimit2, currentRunningSeconds2} = this.state\r\n      const timeInSeconds2 = timerLimit2 * 60 - currentRunningSeconds2\r\n      const minutes2 = Math.floor(timeInSeconds2 / 60)\r\n      const seconds2 = Math.floor(timeInSeconds2 % 60)\r\n      const minutesInStringFormat2 = minutes2 > 9 ? minutes2 : `0${minutes2}`\r\n      const secondsInStringFormat2 = seconds2 > 9 ? seconds2 : `0${seconds2}`\r\n      return `${minutesInStringFormat2}:${secondsInStringFormat2}`\r\n  }\r\n\r\n    render() {\r\n        const {isTimerRunning} = this.state\r\n        const timerStatusText = isTimerRunning ? '计时中' : '暂停中'\r\n        return (\r\n          <div className=\"app-container\">\r\n            <div className=\"header-container\">\r\n              <h1 className=\"timer-heading\">双方对辩</h1>\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <div className=\"timer-block\">\r\n                  <h1 className=\"time-text\">\r\n                    {this.convertTimeToTimerFormat()} &nbsp;&nbsp;&nbsp;\r\n                    {this.convertTimeToTimerFormat2()}\r\n                  </h1>\r\n                  <p className=\"time-status\">{timerStatusText}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"timer-control-container\">\r\n                {this.renderTimerControlOptions()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default DigitalTimer2"],"mappings":"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"},"metadata":{},"sourceType":"module"}